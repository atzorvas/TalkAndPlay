/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.scify.talkandplay.gui;

import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.awt.GridLayout;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BoxLayout;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import org.scify.talkandplay.gui.grid.GridFrame;
import org.scify.talkandplay.gui.users.UserFormPanel;
import org.scify.talkandplay.gui.users.UserPanel;
import org.scify.talkandplay.models.User;
import org.scify.talkandplay.utils.ConfigurationFile;

/**
 *
 * @author christina
 */
public class MainPanel extends javax.swing.JPanel {

    private ConfigurationFile configurationFile;
    private List<UserPanel> userPanelList;
    private MainFrame parent;

    public MainPanel(MainFrame parent) {
        this.configurationFile = ConfigurationFile.getInstance();
        this.parent = parent;
        initComponents();
        initCustomComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        usersPanel = new javax.swing.JPanel();

        usersPanel.setBackground(new java.awt.Color(255, 255, 255));
        usersPanel.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(usersPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 674, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(usersPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void initCustomComponents() {

        List<User> users = configurationFile.getUsers();

        if (users.size() > 5) {
            usersPanel.setLayout(new GridLayout(0, 6));
        } else {
            usersPanel.setLayout(new GridLayout(0, users.size() + 1));
        }

        userPanelList = new ArrayList<>();
        for (final User user : users) {

            UserPanel userPanel = new UserPanel(parent, user);

            userPanel.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    if (evt.getClickCount() == 2) {
                        GridFrame imagesFrame;
                        try {
                            imagesFrame = new GridFrame(user.getName());
                            imagesFrame.setLocationRelativeTo(null);
                            imagesFrame.setTitle("Talk&Play");
                            imagesFrame.setExtendedState(JFrame.MAXIMIZED_BOTH);
                            imagesFrame.setVisible(true);
                        } catch (IOException ex) {
                            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                }
            });
            userPanelList.add(userPanel);
        }
        repaintUsers();
    }

    public void removeUser(User selectedUser) {
        for (UserPanel p : userPanelList) {
            if (p.getUser().equals(selectedUser)) {
                usersPanel.remove(p);
                break;
            }
        }
        repaintUsers();
    }

    public void repaintUsers() {
        usersPanel.removeAll();
        if (!userPanelList.isEmpty()) {
            for (JPanel panel : userPanelList) {
                usersPanel.add(panel);
            }
        }
        addUserPanel();
        usersPanel.repaint();
    }

    private void addUserPanel() {
        JPanel addUserPanel = new JPanel();
        addUserPanel.setLayout(new BoxLayout(addUserPanel, BoxLayout.Y_AXIS));
        addUserPanel.setBackground(Color.white);

        JLabel nameLabel = new JLabel("Πρόσθεσε νέο χρήστη");
        final JLabel imageLabel = new JLabel(new ImageIcon(getClass().getResource("/org/scify/talkandplay/resources/add-icon.png")));

        imageLabel.setAlignmentX(Component.CENTER_ALIGNMENT);
        nameLabel.setAlignmentX(Component.CENTER_ALIGNMENT);
        nameLabel.setBorder(new EmptyBorder(5, 0, 20, 0));
        nameLabel.setFont(new Font("DejaVu Sans", Font.PLAIN, 16));

        addUserPanel.add(imageLabel);
        addUserPanel.add(nameLabel);
        usersPanel.add(addUserPanel);

        final MainPanel currentPanel = this;

        imageLabel.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseExited(MouseEvent arg0) {
                imageLabel.setIcon(new ImageIcon(getClass().getResource("/org/scify/talkandplay/resources/add-icon.png")));
            }

            @Override
            public void mouseEntered(MouseEvent arg0) {
                imageLabel.setIcon(new ImageIcon(getClass().getResource("/org/scify/talkandplay/resources/add-icon-hover.png")));
            }

            @Override
            public void mouseClicked(MouseEvent arg0) {
                parent.changePanel(new UserFormPanel(parent));
            }
        });
    }

    public void updateUsersPanel(User user, String oldName) {
        for (UserPanel p : userPanelList) {
            if (p.getUser().getName().equals(oldName)) {
                p.repaintPanel(user);
                break;
            }
        }
        repaintUsers();
    }

    public void removeFromUsersPanel(String removeUser) {
        for (UserPanel p : userPanelList) {
            if (p.getUser().getName().equals(removeUser)) {
                usersPanel.remove(p);
                break;
            }
        }
        repaintUsers();
    }

    public List<UserPanel> getUsersPanel() {
        return userPanelList;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel usersPanel;
    // End of variables declaration//GEN-END:variables
}
