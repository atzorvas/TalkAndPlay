package org.scify.talkandplay.gui.grid.games;

import java.awt.FlowLayout;
import java.util.ArrayList;
import java.util.Random;
import javax.swing.JPanel;
import org.scify.talkandplay.gui.grid.BaseGridPanel;
import org.scify.talkandplay.gui.grid.GridFrame;
import org.scify.talkandplay.gui.grid.TileAction;
import org.scify.talkandplay.models.User;
import org.scify.talkandplay.models.games.GameImage;
import org.scify.talkandplay.models.games.GameType;
import org.scify.talkandplay.models.games.StimulusReactionGame;

public class StimulusReactionGamePanel extends BaseGridPanel {

    private StimulusReactionGame game;
    private int selected;

    public StimulusReactionGamePanel(User user, GridFrame parent) {
        super(user, parent);

        initComponents();
        initCustomComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void initCustomComponents() {
        removeAll();
        setLayout(new FlowLayout());
        panelList = new ArrayList<>();

        //select a random game
        Random randomGenerator = new Random();
        for (GameType gameType : user.getGameModule().getGameTypes()) {
            if ("stimulusReactionGame".equals(gameType.getType())) {
                game = (StimulusReactionGame) gameType.getGames().get(randomGenerator.nextInt(gameType.getGames().size()));
            }
        }

        JPanel gamePanel = createGameItem(game.getImages().get(0));
        
        add(gamePanel);
        revalidate();
        repaint();
        parent.clearGrid();
        parent.addGrid(this);
        parent.revalidate();
        parent.repaint();
    }

    private JPanel createGameItem(GameImage image) {

        JPanel panel = tileCreator.create("",
                image.getImage(),
                null,
                new TileAction() {
                    @Override
                    public void act() {
                        selected++;
                        if (selected == game.getImages().size() - 1) {
                            congratulate(game.getImages().get(selected));
                        } else {
                            createGameItem(game.getImages().get(selected));
                        }
                    }

                    @Override
                    public void audioFinished() {
                    }
                });

        return panel;
    }

    private void congratulate(GameImage image) {
        tileCreator.playAudio(game.getWinSound());

        JPanel finalImage = tileCreator.create("",
                image.getImage(),
                null,
                new TileAction() {
                    @Override
                    public void act() {
                        selected++;
                        if (selected == game.getImages().size() - 1) {
                            congratulate(game.getImages().get(selected));
                        } else {
                            createGameItem(game.getImages().get(selected));
                        }
                    }

                    @Override
                    public void audioFinished() {
                    }
                });

        JPanel nextGame = tileCreator.create("Επόμενο παιχνίδι",
                getClass().getResource("/org/scify/talkandplay/resources/more-icon.png").getFile(),
                null,
                new TileAction() {
                    @Override
                    public void act() {
                        StimulusReactionGamePanel gamePanel = new StimulusReactionGamePanel(user, parent);
                        parent.clearGrid();
                        parent.addGrid(gamePanel);
                    }

                    @Override
                    public void audioFinished() {
                    }
                });

        JPanel back = tileCreator.create("Πίσω",
                getClass().getResource("/org/scify/talkandplay/resources/back-icon.png").getFile(),
                null,
                new TileAction() {
                    @Override
                    public void act() {
                        GamesPanel gamesPanel = new GamesPanel(user, parent);
                        parent.clearGrid();
                        parent.addGrid(gamesPanel);
                    }

                    @Override
                    public void audioFinished() {
                    }
                });

        panelList.add(nextGame);
        panelList.add(back);

        removeAll();
        add(finalImage);
        add(nextGame);
        add(back);
        revalidate();
        repaint();

        timer.setList(panelList);
        timer.start();
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
